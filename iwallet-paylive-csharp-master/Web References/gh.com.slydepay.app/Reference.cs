//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace iWalletPayliveModule.gh.com.slydepay.app {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PaymentServiceSoapBinding", Namespace="http://www.i-walletlive.com/payLIVE")]
    public partial class PaymentService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private PaymentHeader paymentHeaderValueField;
        
        private System.Threading.SendOrPostCallback checkPaymentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback processPayPointPaymentOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyPayPointMobilePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback verifyMobilePaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback mobilePayPointPaymentOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePaymentCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback generatePayPointPaymentCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkPayPointPaymentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessPaymentOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback mobilePaymentOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessPaymentJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessOrderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PaymentService() {
            this.Url = global::iWalletPayliveModule.Properties.Settings.Default.iWalletPayliveModule_gh_com_slydepay_app_PaymentService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public PaymentHeader PaymentHeaderValue {
            get {
                return this.paymentHeaderValueField;
            }
            set {
                this.paymentHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkPaymentStatusCompletedEventHandler checkPaymentStatusCompleted;
        
        /// <remarks/>
        public event processPayPointPaymentOrderCompletedEventHandler processPayPointPaymentOrderCompleted;
        
        /// <remarks/>
        public event verifyPayPointMobilePaymentCompletedEventHandler verifyPayPointMobilePaymentCompleted;
        
        /// <remarks/>
        public event verifyMobilePaymentCompletedEventHandler verifyMobilePaymentCompleted;
        
        /// <remarks/>
        public event mobilePayPointPaymentOrderCompletedEventHandler mobilePayPointPaymentOrderCompleted;
        
        /// <remarks/>
        public event CancelTransactionCompletedEventHandler CancelTransactionCompleted;
        
        /// <remarks/>
        public event ConfirmTransactionCompletedEventHandler ConfirmTransactionCompleted;
        
        /// <remarks/>
        public event generatePaymentCodeCompletedEventHandler generatePaymentCodeCompleted;
        
        /// <remarks/>
        public event generatePayPointPaymentCodeCompletedEventHandler generatePayPointPaymentCodeCompleted;
        
        /// <remarks/>
        public event checkPayPointPaymentStatusCompletedEventHandler checkPayPointPaymentStatusCompleted;
        
        /// <remarks/>
        public event ProcessPaymentOrderCompletedEventHandler ProcessPaymentOrderCompleted;
        
        /// <remarks/>
        public event mobilePaymentOrderCompletedEventHandler mobilePaymentOrderCompleted;
        
        /// <remarks/>
        public event ProcessPaymentJSONCompletedEventHandler ProcessPaymentJSONCompleted;
        
        /// <remarks/>
        public event ProcessOrderCompletedEventHandler ProcessOrderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkPaymentStatus(string orderId, string providerName, string providerType) {
            object[] results = this.Invoke("checkPaymentStatus", new object[] {
                        orderId,
                        providerName,
                        providerType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkPaymentStatusAsync(string orderId, string providerName, string providerType) {
            this.checkPaymentStatusAsync(orderId, providerName, providerType, null);
        }
        
        /// <remarks/>
        public void checkPaymentStatusAsync(string orderId, string providerName, string providerType, object userState) {
            if ((this.checkPaymentStatusOperationCompleted == null)) {
                this.checkPaymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckPaymentStatusOperationCompleted);
            }
            this.InvokeAsync("checkPaymentStatus", new object[] {
                        orderId,
                        providerName,
                        providerType}, this.checkPaymentStatusOperationCompleted, userState);
        }
        
        private void OncheckPaymentStatusOperationCompleted(object arg) {
            if ((this.checkPaymentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkPaymentStatusCompleted(this, new checkPaymentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ProcessPaymentOrderResult")]
        public string processPayPointPaymentOrder(string orderId, decimal subtotal, [System.Xml.Serialization.XmlIgnoreAttribute()] bool subtotalSpecified, decimal shippingCost, [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingCostSpecified, decimal taxAmount, [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxAmountSpecified, decimal total, [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified, string comment1, string comment2, string payPointDeviceRef, OrderItem[] orderItems) {
            object[] results = this.Invoke("processPayPointPaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        payPointDeviceRef,
                        orderItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void processPayPointPaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, string payPointDeviceRef, OrderItem[] orderItems) {
            this.processPayPointPaymentOrderAsync(orderId, subtotal, subtotalSpecified, shippingCost, shippingCostSpecified, taxAmount, taxAmountSpecified, total, totalSpecified, comment1, comment2, payPointDeviceRef, orderItems, null);
        }
        
        /// <remarks/>
        public void processPayPointPaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, string payPointDeviceRef, OrderItem[] orderItems, object userState) {
            if ((this.processPayPointPaymentOrderOperationCompleted == null)) {
                this.processPayPointPaymentOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessPayPointPaymentOrderOperationCompleted);
            }
            this.InvokeAsync("processPayPointPaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        payPointDeviceRef,
                        orderItems}, this.processPayPointPaymentOrderOperationCompleted, userState);
        }
        
        private void OnprocessPayPointPaymentOrderOperationCompleted(object arg) {
            if ((this.processPayPointPaymentOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processPayPointPaymentOrderCompleted(this, new processPayPointPaymentOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("verifyMobilePaymentResult")]
        public OrderResult verifyPayPointMobilePayment(string orderId, string payPointDeviceRef) {
            object[] results = this.Invoke("verifyPayPointMobilePayment", new object[] {
                        orderId,
                        payPointDeviceRef});
            return ((OrderResult)(results[0]));
        }
        
        /// <remarks/>
        public void verifyPayPointMobilePaymentAsync(string orderId, string payPointDeviceRef) {
            this.verifyPayPointMobilePaymentAsync(orderId, payPointDeviceRef, null);
        }
        
        /// <remarks/>
        public void verifyPayPointMobilePaymentAsync(string orderId, string payPointDeviceRef, object userState) {
            if ((this.verifyPayPointMobilePaymentOperationCompleted == null)) {
                this.verifyPayPointMobilePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyPayPointMobilePaymentOperationCompleted);
            }
            this.InvokeAsync("verifyPayPointMobilePayment", new object[] {
                        orderId,
                        payPointDeviceRef}, this.verifyPayPointMobilePaymentOperationCompleted, userState);
        }
        
        private void OnverifyPayPointMobilePaymentOperationCompleted(object arg) {
            if ((this.verifyPayPointMobilePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyPayPointMobilePaymentCompleted(this, new verifyPayPointMobilePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderResult verifyMobilePayment(string orderId) {
            object[] results = this.Invoke("verifyMobilePayment", new object[] {
                        orderId});
            return ((OrderResult)(results[0]));
        }
        
        /// <remarks/>
        public void verifyMobilePaymentAsync(string orderId) {
            this.verifyMobilePaymentAsync(orderId, null);
        }
        
        /// <remarks/>
        public void verifyMobilePaymentAsync(string orderId, object userState) {
            if ((this.verifyMobilePaymentOperationCompleted == null)) {
                this.verifyMobilePaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnverifyMobilePaymentOperationCompleted);
            }
            this.InvokeAsync("verifyMobilePayment", new object[] {
                        orderId}, this.verifyMobilePaymentOperationCompleted, userState);
        }
        
        private void OnverifyMobilePaymentOperationCompleted(object arg) {
            if ((this.verifyMobilePaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.verifyMobilePaymentCompleted(this, new verifyMobilePaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("mobilePaymentOrderResult")]
        public OrderResult mobilePayPointPaymentOrder(string orderId, decimal subtotal, [System.Xml.Serialization.XmlIgnoreAttribute()] bool subtotalSpecified, decimal shippingCost, [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingCostSpecified, decimal taxAmount, [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxAmountSpecified, decimal total, [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified, string comment1, string comment2, string payPointDeviceRef, OrderItem[] orderItems) {
            object[] results = this.Invoke("mobilePayPointPaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        payPointDeviceRef,
                        orderItems});
            return ((OrderResult)(results[0]));
        }
        
        /// <remarks/>
        public void mobilePayPointPaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, string payPointDeviceRef, OrderItem[] orderItems) {
            this.mobilePayPointPaymentOrderAsync(orderId, subtotal, subtotalSpecified, shippingCost, shippingCostSpecified, taxAmount, taxAmountSpecified, total, totalSpecified, comment1, comment2, payPointDeviceRef, orderItems, null);
        }
        
        /// <remarks/>
        public void mobilePayPointPaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, string payPointDeviceRef, OrderItem[] orderItems, object userState) {
            if ((this.mobilePayPointPaymentOrderOperationCompleted == null)) {
                this.mobilePayPointPaymentOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmobilePayPointPaymentOrderOperationCompleted);
            }
            this.InvokeAsync("mobilePayPointPaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        payPointDeviceRef,
                        orderItems}, this.mobilePayPointPaymentOrderOperationCompleted, userState);
        }
        
        private void OnmobilePayPointPaymentOrderOperationCompleted(object arg) {
            if ((this.mobilePayPointPaymentOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mobilePayPointPaymentOrderCompleted(this, new mobilePayPointPaymentOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelTransaction(string payToken, string transactionId) {
            object[] results = this.Invoke("CancelTransaction", new object[] {
                        payToken,
                        transactionId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelTransactionAsync(string payToken, string transactionId) {
            this.CancelTransactionAsync(payToken, transactionId, null);
        }
        
        /// <remarks/>
        public void CancelTransactionAsync(string payToken, string transactionId, object userState) {
            if ((this.CancelTransactionOperationCompleted == null)) {
                this.CancelTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTransactionOperationCompleted);
            }
            this.InvokeAsync("CancelTransaction", new object[] {
                        payToken,
                        transactionId}, this.CancelTransactionOperationCompleted, userState);
        }
        
        private void OnCancelTransactionOperationCompleted(object arg) {
            if ((this.CancelTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTransactionCompleted(this, new CancelTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ConfirmTransaction(string payToken, string transactionId) {
            object[] results = this.Invoke("ConfirmTransaction", new object[] {
                        payToken,
                        transactionId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmTransactionAsync(string payToken, string transactionId) {
            this.ConfirmTransactionAsync(payToken, transactionId, null);
        }
        
        /// <remarks/>
        public void ConfirmTransactionAsync(string payToken, string transactionId, object userState) {
            if ((this.ConfirmTransactionOperationCompleted == null)) {
                this.ConfirmTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmTransactionOperationCompleted);
            }
            this.InvokeAsync("ConfirmTransaction", new object[] {
                        payToken,
                        transactionId}, this.ConfirmTransactionOperationCompleted, userState);
        }
        
        private void OnConfirmTransactionOperationCompleted(object arg) {
            if ((this.ConfirmTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmTransactionCompleted(this, new ConfirmTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string generatePaymentCode(
                    string orderId, 
                    decimal subtotal, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool subtotalSpecified, 
                    decimal shippingCost, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingCostSpecified, 
                    decimal taxAmount, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxAmountSpecified, 
                    decimal total, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified, 
                    string comment1, 
                    string comment2, 
                    OrderItem[] orderItems, 
                    string payerName, 
                    string payerMobile, 
                    string providerName, 
                    string providerType) {
            object[] results = this.Invoke("generatePaymentCode", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems,
                        payerName,
                        payerMobile,
                        providerName,
                        providerType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatePaymentCodeAsync(
                    string orderId, 
                    decimal subtotal, 
                    bool subtotalSpecified, 
                    decimal shippingCost, 
                    bool shippingCostSpecified, 
                    decimal taxAmount, 
                    bool taxAmountSpecified, 
                    decimal total, 
                    bool totalSpecified, 
                    string comment1, 
                    string comment2, 
                    OrderItem[] orderItems, 
                    string payerName, 
                    string payerMobile, 
                    string providerName, 
                    string providerType) {
            this.generatePaymentCodeAsync(orderId, subtotal, subtotalSpecified, shippingCost, shippingCostSpecified, taxAmount, taxAmountSpecified, total, totalSpecified, comment1, comment2, orderItems, payerName, payerMobile, providerName, providerType, null);
        }
        
        /// <remarks/>
        public void generatePaymentCodeAsync(
                    string orderId, 
                    decimal subtotal, 
                    bool subtotalSpecified, 
                    decimal shippingCost, 
                    bool shippingCostSpecified, 
                    decimal taxAmount, 
                    bool taxAmountSpecified, 
                    decimal total, 
                    bool totalSpecified, 
                    string comment1, 
                    string comment2, 
                    OrderItem[] orderItems, 
                    string payerName, 
                    string payerMobile, 
                    string providerName, 
                    string providerType, 
                    object userState) {
            if ((this.generatePaymentCodeOperationCompleted == null)) {
                this.generatePaymentCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePaymentCodeOperationCompleted);
            }
            this.InvokeAsync("generatePaymentCode", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems,
                        payerName,
                        payerMobile,
                        providerName,
                        providerType}, this.generatePaymentCodeOperationCompleted, userState);
        }
        
        private void OngeneratePaymentCodeOperationCompleted(object arg) {
            if ((this.generatePaymentCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePaymentCodeCompleted(this, new generatePaymentCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("generatePaymentCodeResult")]
        public string generatePayPointPaymentCode(
                    string orderId, 
                    decimal subtotal, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool subtotalSpecified, 
                    decimal shippingCost, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingCostSpecified, 
                    decimal taxAmount, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxAmountSpecified, 
                    decimal total, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified, 
                    string comment1, 
                    string comment2, 
                    OrderItem[] orderItems, 
                    string payerName, 
                    string payerMobile, 
                    string providerName, 
                    string providerType, 
                    string payPointDeviceRef) {
            object[] results = this.Invoke("generatePayPointPaymentCode", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems,
                        payerName,
                        payerMobile,
                        providerName,
                        providerType,
                        payPointDeviceRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generatePayPointPaymentCodeAsync(
                    string orderId, 
                    decimal subtotal, 
                    bool subtotalSpecified, 
                    decimal shippingCost, 
                    bool shippingCostSpecified, 
                    decimal taxAmount, 
                    bool taxAmountSpecified, 
                    decimal total, 
                    bool totalSpecified, 
                    string comment1, 
                    string comment2, 
                    OrderItem[] orderItems, 
                    string payerName, 
                    string payerMobile, 
                    string providerName, 
                    string providerType, 
                    string payPointDeviceRef) {
            this.generatePayPointPaymentCodeAsync(orderId, subtotal, subtotalSpecified, shippingCost, shippingCostSpecified, taxAmount, taxAmountSpecified, total, totalSpecified, comment1, comment2, orderItems, payerName, payerMobile, providerName, providerType, payPointDeviceRef, null);
        }
        
        /// <remarks/>
        public void generatePayPointPaymentCodeAsync(
                    string orderId, 
                    decimal subtotal, 
                    bool subtotalSpecified, 
                    decimal shippingCost, 
                    bool shippingCostSpecified, 
                    decimal taxAmount, 
                    bool taxAmountSpecified, 
                    decimal total, 
                    bool totalSpecified, 
                    string comment1, 
                    string comment2, 
                    OrderItem[] orderItems, 
                    string payerName, 
                    string payerMobile, 
                    string providerName, 
                    string providerType, 
                    string payPointDeviceRef, 
                    object userState) {
            if ((this.generatePayPointPaymentCodeOperationCompleted == null)) {
                this.generatePayPointPaymentCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneratePayPointPaymentCodeOperationCompleted);
            }
            this.InvokeAsync("generatePayPointPaymentCode", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems,
                        payerName,
                        payerMobile,
                        providerName,
                        providerType,
                        payPointDeviceRef}, this.generatePayPointPaymentCodeOperationCompleted, userState);
        }
        
        private void OngeneratePayPointPaymentCodeOperationCompleted(object arg) {
            if ((this.generatePayPointPaymentCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generatePayPointPaymentCodeCompleted(this, new generatePayPointPaymentCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("checkPaymentStatusResult")]
        public string checkPayPointPaymentStatus(string orderId, string providerName, string providerType, string payPointDeviceRef) {
            object[] results = this.Invoke("checkPayPointPaymentStatus", new object[] {
                        orderId,
                        providerName,
                        providerType,
                        payPointDeviceRef});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkPayPointPaymentStatusAsync(string orderId, string providerName, string providerType, string payPointDeviceRef) {
            this.checkPayPointPaymentStatusAsync(orderId, providerName, providerType, payPointDeviceRef, null);
        }
        
        /// <remarks/>
        public void checkPayPointPaymentStatusAsync(string orderId, string providerName, string providerType, string payPointDeviceRef, object userState) {
            if ((this.checkPayPointPaymentStatusOperationCompleted == null)) {
                this.checkPayPointPaymentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckPayPointPaymentStatusOperationCompleted);
            }
            this.InvokeAsync("checkPayPointPaymentStatus", new object[] {
                        orderId,
                        providerName,
                        providerType,
                        payPointDeviceRef}, this.checkPayPointPaymentStatusOperationCompleted, userState);
        }
        
        private void OncheckPayPointPaymentStatusOperationCompleted(object arg) {
            if ((this.checkPayPointPaymentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkPayPointPaymentStatusCompleted(this, new checkPayPointPaymentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessPaymentOrder(string orderId, decimal subtotal, [System.Xml.Serialization.XmlIgnoreAttribute()] bool subtotalSpecified, decimal shippingCost, [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingCostSpecified, decimal taxAmount, [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxAmountSpecified, decimal total, [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified, string comment1, string comment2, OrderItem[] orderItems) {
            object[] results = this.Invoke("ProcessPaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessPaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, OrderItem[] orderItems) {
            this.ProcessPaymentOrderAsync(orderId, subtotal, subtotalSpecified, shippingCost, shippingCostSpecified, taxAmount, taxAmountSpecified, total, totalSpecified, comment1, comment2, orderItems, null);
        }
        
        /// <remarks/>
        public void ProcessPaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, OrderItem[] orderItems, object userState) {
            if ((this.ProcessPaymentOrderOperationCompleted == null)) {
                this.ProcessPaymentOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessPaymentOrderOperationCompleted);
            }
            this.InvokeAsync("ProcessPaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems}, this.ProcessPaymentOrderOperationCompleted, userState);
        }
        
        private void OnProcessPaymentOrderOperationCompleted(object arg) {
            if ((this.ProcessPaymentOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessPaymentOrderCompleted(this, new ProcessPaymentOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrderResult mobilePaymentOrder(string orderId, decimal subtotal, [System.Xml.Serialization.XmlIgnoreAttribute()] bool subtotalSpecified, decimal shippingCost, [System.Xml.Serialization.XmlIgnoreAttribute()] bool shippingCostSpecified, decimal taxAmount, [System.Xml.Serialization.XmlIgnoreAttribute()] bool taxAmountSpecified, decimal total, [System.Xml.Serialization.XmlIgnoreAttribute()] bool totalSpecified, string comment1, string comment2, OrderItem[] orderItems) {
            object[] results = this.Invoke("mobilePaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems});
            return ((OrderResult)(results[0]));
        }
        
        /// <remarks/>
        public void mobilePaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, OrderItem[] orderItems) {
            this.mobilePaymentOrderAsync(orderId, subtotal, subtotalSpecified, shippingCost, shippingCostSpecified, taxAmount, taxAmountSpecified, total, totalSpecified, comment1, comment2, orderItems, null);
        }
        
        /// <remarks/>
        public void mobilePaymentOrderAsync(string orderId, decimal subtotal, bool subtotalSpecified, decimal shippingCost, bool shippingCostSpecified, decimal taxAmount, bool taxAmountSpecified, decimal total, bool totalSpecified, string comment1, string comment2, OrderItem[] orderItems, object userState) {
            if ((this.mobilePaymentOrderOperationCompleted == null)) {
                this.mobilePaymentOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmobilePaymentOrderOperationCompleted);
            }
            this.InvokeAsync("mobilePaymentOrder", new object[] {
                        orderId,
                        subtotal,
                        subtotalSpecified,
                        shippingCost,
                        shippingCostSpecified,
                        taxAmount,
                        taxAmountSpecified,
                        total,
                        totalSpecified,
                        comment1,
                        comment2,
                        orderItems}, this.mobilePaymentOrderOperationCompleted, userState);
        }
        
        private void OnmobilePaymentOrderOperationCompleted(object arg) {
            if ((this.mobilePaymentOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mobilePaymentOrderCompleted(this, new mobilePaymentOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("processPaymentJSONResult")]
        public string ProcessPaymentJSON(string orderId, decimal amount, [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, string comment1, string comment2, OrderItem[] orderItems) {
            object[] results = this.Invoke("ProcessPaymentJSON", new object[] {
                        orderId,
                        amount,
                        amountSpecified,
                        comment1,
                        comment2,
                        orderItems});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessPaymentJSONAsync(string orderId, decimal amount, bool amountSpecified, string comment1, string comment2, OrderItem[] orderItems) {
            this.ProcessPaymentJSONAsync(orderId, amount, amountSpecified, comment1, comment2, orderItems, null);
        }
        
        /// <remarks/>
        public void ProcessPaymentJSONAsync(string orderId, decimal amount, bool amountSpecified, string comment1, string comment2, OrderItem[] orderItems, object userState) {
            if ((this.ProcessPaymentJSONOperationCompleted == null)) {
                this.ProcessPaymentJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessPaymentJSONOperationCompleted);
            }
            this.InvokeAsync("ProcessPaymentJSON", new object[] {
                        orderId,
                        amount,
                        amountSpecified,
                        comment1,
                        comment2,
                        orderItems}, this.ProcessPaymentJSONOperationCompleted, userState);
        }
        
        private void OnProcessPaymentJSONOperationCompleted(object arg) {
            if ((this.ProcessPaymentJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessPaymentJSONCompleted(this, new ProcessPaymentJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("PaymentHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.i-walletlive.com/payLIVE", ResponseNamespace="http://www.i-walletlive.com/payLIVE", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessOrder(string amount, string custRef, string comment1, string comment2, string unitPrice, string quantity, string item, string useToken, string useIntMode) {
            object[] results = this.Invoke("ProcessOrder", new object[] {
                        amount,
                        custRef,
                        comment1,
                        comment2,
                        unitPrice,
                        quantity,
                        item,
                        useToken,
                        useIntMode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessOrderAsync(string amount, string custRef, string comment1, string comment2, string unitPrice, string quantity, string item, string useToken, string useIntMode) {
            this.ProcessOrderAsync(amount, custRef, comment1, comment2, unitPrice, quantity, item, useToken, useIntMode, null);
        }
        
        /// <remarks/>
        public void ProcessOrderAsync(string amount, string custRef, string comment1, string comment2, string unitPrice, string quantity, string item, string useToken, string useIntMode, object userState) {
            if ((this.ProcessOrderOperationCompleted == null)) {
                this.ProcessOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessOrderOperationCompleted);
            }
            this.InvokeAsync("ProcessOrder", new object[] {
                        amount,
                        custRef,
                        comment1,
                        comment2,
                        unitPrice,
                        quantity,
                        item,
                        useToken,
                        useIntMode}, this.ProcessOrderOperationCompleted, userState);
        }
        
        private void OnProcessOrderOperationCompleted(object arg) {
            if ((this.ProcessOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessOrderCompleted(this, new ProcessOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.i-walletlive.com/payLIVE")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.i-walletlive.com/payLIVE", IsNullable=false)]
    public partial class PaymentHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string aPIVersionField;
        
        private string merchantKeyField;
        
        private string merchantEmailField;
        
        private string svcTypeField;
        
        private bool useIntModeField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string APIVersion {
            get {
                return this.aPIVersionField;
            }
            set {
                this.aPIVersionField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantKey {
            get {
                return this.merchantKeyField;
            }
            set {
                this.merchantKeyField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantEmail {
            get {
                return this.merchantEmailField;
            }
            set {
                this.merchantEmailField = value;
            }
        }
        
        /// <remarks/>
        public string SvcType {
            get {
                return this.svcTypeField;
            }
            set {
                this.svcTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool UseIntMode {
            get {
                return this.useIntModeField;
            }
            set {
                this.useIntModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.i-walletlive.com/payLIVE")]
    public partial class OrderResult {
        
        private string errorField;
        
        private string imageUrlField;
        
        private string orderCodeField;
        
        private string statusField;
        
        private bool successField;
        
        private string tokenField;
        
        private string transactionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string imageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string orderCode {
            get {
                return this.orderCodeField;
            }
            set {
                this.orderCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string transactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.i-walletlive.com/payLIVE")]
    public partial class OrderItem {
        
        private string itemCodeField;
        
        private string itemNameField;
        
        private decimal unitPriceField;
        
        private int quantityField;
        
        private decimal subTotalField;
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal SubTotal {
            get {
                return this.subTotalField;
            }
            set {
                this.subTotalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void checkPaymentStatusCompletedEventHandler(object sender, checkPaymentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkPaymentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkPaymentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void processPayPointPaymentOrderCompletedEventHandler(object sender, processPayPointPaymentOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processPayPointPaymentOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processPayPointPaymentOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void verifyPayPointMobilePaymentCompletedEventHandler(object sender, verifyPayPointMobilePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyPayPointMobilePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyPayPointMobilePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void verifyMobilePaymentCompletedEventHandler(object sender, verifyMobilePaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class verifyMobilePaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal verifyMobilePaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void mobilePayPointPaymentOrderCompletedEventHandler(object sender, mobilePayPointPaymentOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mobilePayPointPaymentOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mobilePayPointPaymentOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CancelTransactionCompletedEventHandler(object sender, CancelTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ConfirmTransactionCompletedEventHandler(object sender, ConfirmTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void generatePaymentCodeCompletedEventHandler(object sender, generatePaymentCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePaymentCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePaymentCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void generatePayPointPaymentCodeCompletedEventHandler(object sender, generatePayPointPaymentCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generatePayPointPaymentCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generatePayPointPaymentCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void checkPayPointPaymentStatusCompletedEventHandler(object sender, checkPayPointPaymentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkPayPointPaymentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkPayPointPaymentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ProcessPaymentOrderCompletedEventHandler(object sender, ProcessPaymentOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessPaymentOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessPaymentOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void mobilePaymentOrderCompletedEventHandler(object sender, mobilePaymentOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mobilePaymentOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mobilePaymentOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ProcessPaymentJSONCompletedEventHandler(object sender, ProcessPaymentJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessPaymentJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessPaymentJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ProcessOrderCompletedEventHandler(object sender, ProcessOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591